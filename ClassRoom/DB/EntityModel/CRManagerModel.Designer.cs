//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("ClassRoomModel", "FK_Articles_Messages", "Articles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClassRoom.DB.EntityModel.Article), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClassRoom.DB.EntityModel.Message), true)]
[assembly: EdmRelationshipAttribute("ClassRoomModel", "FK_Users_Artcles", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClassRoom.DB.EntityModel.User), "Articles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClassRoom.DB.EntityModel.Article), true)]
[assembly: EdmRelationshipAttribute("ClassRoomModel", "FK_ChineseT_Classes", "Teachers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClassRoom.DB.EntityModel.Teacher), "Classes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClassRoom.DB.EntityModel.Class), true)]
[assembly: EdmRelationshipAttribute("ClassRoomModel", "FK_Classes_Teachers", "Teachers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClassRoom.DB.EntityModel.Teacher), "Classes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClassRoom.DB.EntityModel.Class), true)]
[assembly: EdmRelationshipAttribute("ClassRoomModel", "FK_MathT_Classes", "Teachers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClassRoom.DB.EntityModel.Teacher), "Classes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClassRoom.DB.EntityModel.Class), true)]
[assembly: EdmRelationshipAttribute("ClassRoomModel", "FK_Students_Classes", "Classes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClassRoom.DB.EntityModel.Class), "Students", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClassRoom.DB.EntityModel.Student), true)]
[assembly: EdmRelationshipAttribute("ClassRoomModel", "FK_Teachers_Courses", "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClassRoom.DB.EntityModel.Course), "Teachers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClassRoom.DB.EntityModel.Teacher), true)]
[assembly: EdmRelationshipAttribute("ClassRoomModel", "FK_Photos_Messages", "Photos", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClassRoom.DB.EntityModel.Photo), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClassRoom.DB.EntityModel.Message), true)]
[assembly: EdmRelationshipAttribute("ClassRoomModel", "FK_Users_Messages", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClassRoom.DB.EntityModel.User), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClassRoom.DB.EntityModel.Message), true)]
[assembly: EdmRelationshipAttribute("ClassRoomModel", "FK_Users_Notes", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClassRoom.DB.EntityModel.User), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClassRoom.DB.EntityModel.Note), true)]
[assembly: EdmRelationshipAttribute("ClassRoomModel", "FK_Users_Photos", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClassRoom.DB.EntityModel.User), "Photos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClassRoom.DB.EntityModel.Photo), true)]
[assembly: EdmRelationshipAttribute("ClassRoomModel", "FK_Users_Students", "Students", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClassRoom.DB.EntityModel.Student), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClassRoom.DB.EntityModel.User), true)]
[assembly: EdmRelationshipAttribute("ClassRoomModel", "FK_Users_Teachers", "Teachers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClassRoom.DB.EntityModel.Teacher), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClassRoom.DB.EntityModel.User), true)]

#endregion

namespace ClassRoom.DB.EntityModel
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class ClassRoomEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“ClassRoomEntities”部分中的连接字符串初始化新 ClassRoomEntities 对象。
        /// </summary>
        public ClassRoomEntities() : base("name=ClassRoomEntities", "ClassRoomEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ClassRoomEntities 对象。
        /// </summary>
        public ClassRoomEntities(string connectionString) : base(connectionString, "ClassRoomEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ClassRoomEntities 对象。
        /// </summary>
        public ClassRoomEntities(EntityConnection connection) : base(connection, "ClassRoomEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Article> Articles
        {
            get
            {
                if ((_Articles == null))
                {
                    _Articles = base.CreateObjectSet<Article>("Articles");
                }
                return _Articles;
            }
        }
        private ObjectSet<Article> _Articles;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Class> Classes
        {
            get
            {
                if ((_Classes == null))
                {
                    _Classes = base.CreateObjectSet<Class>("Classes");
                }
                return _Classes;
            }
        }
        private ObjectSet<Class> _Classes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Course> Courses
        {
            get
            {
                if ((_Courses == null))
                {
                    _Courses = base.CreateObjectSet<Course>("Courses");
                }
                return _Courses;
            }
        }
        private ObjectSet<Course> _Courses;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Note> Notes
        {
            get
            {
                if ((_Notes == null))
                {
                    _Notes = base.CreateObjectSet<Note>("Notes");
                }
                return _Notes;
            }
        }
        private ObjectSet<Note> _Notes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Photo> Photos
        {
            get
            {
                if ((_Photos == null))
                {
                    _Photos = base.CreateObjectSet<Photo>("Photos");
                }
                return _Photos;
            }
        }
        private ObjectSet<Photo> _Photos;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Student> Students
        {
            get
            {
                if ((_Students == null))
                {
                    _Students = base.CreateObjectSet<Student>("Students");
                }
                return _Students;
            }
        }
        private ObjectSet<Student> _Students;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Teacher> Teachers
        {
            get
            {
                if ((_Teachers == null))
                {
                    _Teachers = base.CreateObjectSet<Teacher>("Teachers");
                }
                return _Teachers;
            }
        }
        private ObjectSet<Teacher> _Teachers;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Articles EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToArticles(Article article)
        {
            base.AddObject("Articles", article);
        }
    
        /// <summary>
        /// 用于向 Classes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToClasses(Class @class)
        {
            base.AddObject("Classes", @class);
        }
    
        /// <summary>
        /// 用于向 Courses EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCourses(Course course)
        {
            base.AddObject("Courses", course);
        }
    
        /// <summary>
        /// 用于向 Messages EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// 用于向 Notes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToNotes(Note note)
        {
            base.AddObject("Notes", note);
        }
    
        /// <summary>
        /// 用于向 Photos EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPhotos(Photo photo)
        {
            base.AddObject("Photos", photo);
        }
    
        /// <summary>
        /// 用于向 Students EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToStudents(Student student)
        {
            base.AddObject("Students", student);
        }
    
        /// <summary>
        /// 用于向 sysdiagrams EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// 用于向 Teachers EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTeachers(Teacher teacher)
        {
            base.AddObject("Teachers", teacher);
        }
    
        /// <summary>
        /// 用于向 Users EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassRoomModel", Name="Article")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Article : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Article 对象。
        /// </summary>
        /// <param name="articleID">ArticleID 属性的初始值。</param>
        /// <param name="articleContent">ArticleContent 属性的初始值。</param>
        /// <param name="uploadTime">UploadTime 属性的初始值。</param>
        /// <param name="aUserID">AUserID 属性的初始值。</param>
        /// <param name="articleTitle">ArticleTitle 属性的初始值。</param>
        public static Article CreateArticle(global::System.Int32 articleID, global::System.String articleContent, global::System.DateTime uploadTime, global::System.Int32 aUserID, global::System.String articleTitle)
        {
            Article article = new Article();
            article.ArticleID = articleID;
            article.ArticleContent = articleContent;
            article.UploadTime = uploadTime;
            article.AUserID = aUserID;
            article.ArticleTitle = articleTitle;
            return article;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArticleID
        {
            get
            {
                return _ArticleID;
            }
            set
            {
                if (_ArticleID != value)
                {
                    OnArticleIDChanging(value);
                    ReportPropertyChanging("ArticleID");
                    _ArticleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ArticleID");
                    OnArticleIDChanged();
                }
            }
        }
        private global::System.Int32 _ArticleID;
        partial void OnArticleIDChanging(global::System.Int32 value);
        partial void OnArticleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ArticleContent
        {
            get
            {
                return _ArticleContent;
            }
            set
            {
                OnArticleContentChanging(value);
                ReportPropertyChanging("ArticleContent");
                _ArticleContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ArticleContent");
                OnArticleContentChanged();
            }
        }
        private global::System.String _ArticleContent;
        partial void OnArticleContentChanging(global::System.String value);
        partial void OnArticleContentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UploadTime
        {
            get
            {
                return _UploadTime;
            }
            set
            {
                OnUploadTimeChanging(value);
                ReportPropertyChanging("UploadTime");
                _UploadTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadTime");
                OnUploadTimeChanged();
            }
        }
        private global::System.DateTime _UploadTime;
        partial void OnUploadTimeChanging(global::System.DateTime value);
        partial void OnUploadTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AUserID
        {
            get
            {
                return _AUserID;
            }
            set
            {
                OnAUserIDChanging(value);
                ReportPropertyChanging("AUserID");
                _AUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AUserID");
                OnAUserIDChanged();
            }
        }
        private global::System.Int32 _AUserID;
        partial void OnAUserIDChanging(global::System.Int32 value);
        partial void OnAUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ArticleTitle
        {
            get
            {
                return _ArticleTitle;
            }
            set
            {
                OnArticleTitleChanging(value);
                ReportPropertyChanging("ArticleTitle");
                _ArticleTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ArticleTitle");
                OnArticleTitleChanged();
            }
        }
        private global::System.String _ArticleTitle;
        partial void OnArticleTitleChanging(global::System.String value);
        partial void OnArticleTitleChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Articles_Messages", "Messages")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("ClassRoomModel.FK_Articles_Messages", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("ClassRoomModel.FK_Articles_Messages", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Users_Artcles", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClassRoomModel.FK_Users_Artcles", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClassRoomModel.FK_Users_Artcles", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClassRoomModel.FK_Users_Artcles", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ClassRoomModel.FK_Users_Artcles", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassRoomModel", Name="Class")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Class : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Class 对象。
        /// </summary>
        /// <param name="classID">ClassID 属性的初始值。</param>
        /// <param name="className">ClassName 属性的初始值。</param>
        public static Class CreateClass(global::System.Int32 classID, global::System.String className)
        {
            Class @class = new Class();
            @class.ClassID = classID;
            @class.ClassName = className;
            return @class;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                if (_ClassID != value)
                {
                    OnClassIDChanging(value);
                    ReportPropertyChanging("ClassID");
                    _ClassID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClassID");
                    OnClassIDChanged();
                }
            }
        }
        private global::System.Int32 _ClassID;
        partial void OnClassIDChanging(global::System.Int32 value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HeadTeacherID
        {
            get
            {
                return _HeadTeacherID;
            }
            set
            {
                OnHeadTeacherIDChanging(value);
                ReportPropertyChanging("HeadTeacherID");
                _HeadTeacherID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HeadTeacherID");
                OnHeadTeacherIDChanged();
            }
        }
        private Nullable<global::System.Int32> _HeadTeacherID;
        partial void OnHeadTeacherIDChanging(Nullable<global::System.Int32> value);
        partial void OnHeadTeacherIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassName
        {
            get
            {
                return _ClassName;
            }
            set
            {
                OnClassNameChanging(value);
                ReportPropertyChanging("ClassName");
                _ClassName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClassName");
                OnClassNameChanged();
            }
        }
        private global::System.String _ClassName;
        partial void OnClassNameChanging(global::System.String value);
        partial void OnClassNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassDecription
        {
            get
            {
                return _ClassDecription;
            }
            set
            {
                OnClassDecriptionChanging(value);
                ReportPropertyChanging("ClassDecription");
                _ClassDecription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClassDecription");
                OnClassDecriptionChanged();
            }
        }
        private global::System.String _ClassDecription;
        partial void OnClassDecriptionChanging(global::System.String value);
        partial void OnClassDecriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChineseTeacher
        {
            get
            {
                return _ChineseTeacher;
            }
            set
            {
                OnChineseTeacherChanging(value);
                ReportPropertyChanging("ChineseTeacher");
                _ChineseTeacher = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChineseTeacher");
                OnChineseTeacherChanged();
            }
        }
        private Nullable<global::System.Int32> _ChineseTeacher;
        partial void OnChineseTeacherChanging(Nullable<global::System.Int32> value);
        partial void OnChineseTeacherChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MathTeacher
        {
            get
            {
                return _MathTeacher;
            }
            set
            {
                OnMathTeacherChanging(value);
                ReportPropertyChanging("MathTeacher");
                _MathTeacher = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MathTeacher");
                OnMathTeacherChanged();
            }
        }
        private Nullable<global::System.Int32> _MathTeacher;
        partial void OnMathTeacherChanging(Nullable<global::System.Int32> value);
        partial void OnMathTeacherChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_ChineseT_Classes", "Teachers")]
        public Teacher Teacher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("ClassRoomModel.FK_ChineseT_Classes", "Teachers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("ClassRoomModel.FK_ChineseT_Classes", "Teachers").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teacher> TeacherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("ClassRoomModel.FK_ChineseT_Classes", "Teachers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teacher>("ClassRoomModel.FK_ChineseT_Classes", "Teachers", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Classes_Teachers", "Teachers")]
        public Teacher Teacher1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("ClassRoomModel.FK_Classes_Teachers", "Teachers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("ClassRoomModel.FK_Classes_Teachers", "Teachers").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teacher> Teacher1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("ClassRoomModel.FK_Classes_Teachers", "Teachers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teacher>("ClassRoomModel.FK_Classes_Teachers", "Teachers", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_MathT_Classes", "Teachers")]
        public Teacher Teacher2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("ClassRoomModel.FK_MathT_Classes", "Teachers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("ClassRoomModel.FK_MathT_Classes", "Teachers").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teacher> Teacher2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("ClassRoomModel.FK_MathT_Classes", "Teachers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teacher>("ClassRoomModel.FK_MathT_Classes", "Teachers", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Students_Classes", "Students")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("ClassRoomModel.FK_Students_Classes", "Students");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("ClassRoomModel.FK_Students_Classes", "Students", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassRoomModel", Name="Course")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Course : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Course 对象。
        /// </summary>
        /// <param name="courseID">CourseID 属性的初始值。</param>
        /// <param name="courseName">CourseName 属性的初始值。</param>
        public static Course CreateCourse(global::System.Int32 courseID, global::System.String courseName)
        {
            Course course = new Course();
            course.CourseID = courseID;
            course.CourseName = courseName;
            return course;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseID
        {
            get
            {
                return _CourseID;
            }
            set
            {
                if (_CourseID != value)
                {
                    OnCourseIDChanging(value);
                    ReportPropertyChanging("CourseID");
                    _CourseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CourseID");
                    OnCourseIDChanged();
                }
            }
        }
        private global::System.Int32 _CourseID;
        partial void OnCourseIDChanging(global::System.Int32 value);
        partial void OnCourseIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CourseName
        {
            get
            {
                return _CourseName;
            }
            set
            {
                OnCourseNameChanging(value);
                ReportPropertyChanging("CourseName");
                _CourseName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CourseName");
                OnCourseNameChanged();
            }
        }
        private global::System.String _CourseName;
        partial void OnCourseNameChanging(global::System.String value);
        partial void OnCourseNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Teachers_Courses", "Teachers")]
        public EntityCollection<Teacher> Teachers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Teacher>("ClassRoomModel.FK_Teachers_Courses", "Teachers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Teacher>("ClassRoomModel.FK_Teachers_Courses", "Teachers", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassRoomModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Message 对象。
        /// </summary>
        /// <param name="messageID">MessageID 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="time">Time 属性的初始值。</param>
        /// <param name="wordContent">WordContent 属性的初始值。</param>
        public static Message CreateMessage(global::System.Int32 messageID, global::System.Int32 userID, global::System.DateTime time, global::System.String wordContent)
        {
            Message message = new Message();
            message.MessageID = messageID;
            message.UserID = userID;
            message.Time = time;
            message.WordContent = wordContent;
            return message;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                if (_MessageID != value)
                {
                    OnMessageIDChanging(value);
                    ReportPropertyChanging("MessageID");
                    _MessageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageID");
                    OnMessageIDChanged();
                }
            }
        }
        private global::System.Int32 _MessageID;
        partial void OnMessageIDChanging(global::System.Int32 value);
        partial void OnMessageIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WordContent
        {
            get
            {
                return _WordContent;
            }
            set
            {
                OnWordContentChanging(value);
                ReportPropertyChanging("WordContent");
                _WordContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WordContent");
                OnWordContentChanged();
            }
        }
        private global::System.String _WordContent;
        partial void OnWordContentChanging(global::System.String value);
        partial void OnWordContentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MessageConnectID
        {
            get
            {
                return _MessageConnectID;
            }
            set
            {
                OnMessageConnectIDChanging(value);
                ReportPropertyChanging("MessageConnectID");
                _MessageConnectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageConnectID");
                OnMessageConnectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MessageConnectID;
        partial void OnMessageConnectIDChanging(Nullable<global::System.Int32> value);
        partial void OnMessageConnectIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MessageType
        {
            get
            {
                return _MessageType;
            }
            set
            {
                OnMessageTypeChanging(value);
                ReportPropertyChanging("MessageType");
                _MessageType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageType");
                OnMessageTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _MessageType;
        partial void OnMessageTypeChanging(Nullable<global::System.Int32> value);
        partial void OnMessageTypeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Articles_Messages", "Articles")]
        public Article Article
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Article>("ClassRoomModel.FK_Articles_Messages", "Articles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Article>("ClassRoomModel.FK_Articles_Messages", "Articles").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Article> ArticleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Article>("ClassRoomModel.FK_Articles_Messages", "Articles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Article>("ClassRoomModel.FK_Articles_Messages", "Articles", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Photos_Messages", "Photos")]
        public Photo Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("ClassRoomModel.FK_Photos_Messages", "Photos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("ClassRoomModel.FK_Photos_Messages", "Photos").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Photo> PhotoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("ClassRoomModel.FK_Photos_Messages", "Photos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Photo>("ClassRoomModel.FK_Photos_Messages", "Photos", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Users_Messages", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClassRoomModel.FK_Users_Messages", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClassRoomModel.FK_Users_Messages", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClassRoomModel.FK_Users_Messages", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ClassRoomModel.FK_Users_Messages", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassRoomModel", Name="Note")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Note : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Note 对象。
        /// </summary>
        /// <param name="noteID">NoteID 属性的初始值。</param>
        /// <param name="body">Body 属性的初始值。</param>
        /// <param name="addTime">AddTime 属性的初始值。</param>
        /// <param name="rotateAngle">RotateAngle 属性的初始值。</param>
        /// <param name="rotateCenterX">RotateCenterX 属性的初始值。</param>
        /// <param name="rotateCenterY">RotateCenterY 属性的初始值。</param>
        /// <param name="x">X 属性的初始值。</param>
        /// <param name="y">Y 属性的初始值。</param>
        /// <param name="width">Width 属性的初始值。</param>
        /// <param name="height">Height 属性的初始值。</param>
        public static Note CreateNote(global::System.Int32 noteID, global::System.String body, global::System.DateTime addTime, global::System.Double rotateAngle, global::System.Double rotateCenterX, global::System.Double rotateCenterY, global::System.Double x, global::System.Double y, global::System.Double width, global::System.Double height)
        {
            Note note = new Note();
            note.NoteID = noteID;
            note.Body = body;
            note.AddTime = addTime;
            note.RotateAngle = rotateAngle;
            note.RotateCenterX = rotateCenterX;
            note.RotateCenterY = rotateCenterY;
            note.X = x;
            note.Y = y;
            note.Width = width;
            note.Height = height;
            return note;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoteID
        {
            get
            {
                return _NoteID;
            }
            set
            {
                if (_NoteID != value)
                {
                    OnNoteIDChanging(value);
                    ReportPropertyChanging("NoteID");
                    _NoteID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NoteID");
                    OnNoteIDChanged();
                }
            }
        }
        private global::System.Int32 _NoteID;
        partial void OnNoteIDChanging(global::System.Int32 value);
        partial void OnNoteIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTime
        {
            get
            {
                return _AddTime;
            }
            set
            {
                OnAddTimeChanging(value);
                ReportPropertyChanging("AddTime");
                _AddTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddTime");
                OnAddTimeChanged();
            }
        }
        private global::System.DateTime _AddTime;
        partial void OnAddTimeChanging(global::System.DateTime value);
        partial void OnAddTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NUserID
        {
            get
            {
                return _NUserID;
            }
            set
            {
                OnNUserIDChanging(value);
                ReportPropertyChanging("NUserID");
                _NUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NUserID");
                OnNUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _NUserID;
        partial void OnNUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnNUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RotateAngle
        {
            get
            {
                return _RotateAngle;
            }
            set
            {
                OnRotateAngleChanging(value);
                ReportPropertyChanging("RotateAngle");
                _RotateAngle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RotateAngle");
                OnRotateAngleChanged();
            }
        }
        private global::System.Double _RotateAngle;
        partial void OnRotateAngleChanging(global::System.Double value);
        partial void OnRotateAngleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RotateCenterX
        {
            get
            {
                return _RotateCenterX;
            }
            set
            {
                OnRotateCenterXChanging(value);
                ReportPropertyChanging("RotateCenterX");
                _RotateCenterX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RotateCenterX");
                OnRotateCenterXChanged();
            }
        }
        private global::System.Double _RotateCenterX;
        partial void OnRotateCenterXChanging(global::System.Double value);
        partial void OnRotateCenterXChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RotateCenterY
        {
            get
            {
                return _RotateCenterY;
            }
            set
            {
                OnRotateCenterYChanging(value);
                ReportPropertyChanging("RotateCenterY");
                _RotateCenterY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RotateCenterY");
                OnRotateCenterYChanged();
            }
        }
        private global::System.Double _RotateCenterY;
        partial void OnRotateCenterYChanging(global::System.Double value);
        partial void OnRotateCenterYChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double X
        {
            get
            {
                return _X;
            }
            set
            {
                OnXChanging(value);
                ReportPropertyChanging("X");
                _X = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("X");
                OnXChanged();
            }
        }
        private global::System.Double _X;
        partial void OnXChanging(global::System.Double value);
        partial void OnXChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Y
        {
            get
            {
                return _Y;
            }
            set
            {
                OnYChanging(value);
                ReportPropertyChanging("Y");
                _Y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Y");
                OnYChanged();
            }
        }
        private global::System.Double _Y;
        partial void OnYChanging(global::System.Double value);
        partial void OnYChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private global::System.Double _Width;
        partial void OnWidthChanging(global::System.Double value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private global::System.Double _Height;
        partial void OnHeightChanging(global::System.Double value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Users_Notes", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClassRoomModel.FK_Users_Notes", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClassRoomModel.FK_Users_Notes", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClassRoomModel.FK_Users_Notes", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ClassRoomModel.FK_Users_Notes", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassRoomModel", Name="Photo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Photo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Photo 对象。
        /// </summary>
        /// <param name="photoID">PhotoID 属性的初始值。</param>
        public static Photo CreatePhoto(global::System.Int32 photoID)
        {
            Photo photo = new Photo();
            photo.PhotoID = photoID;
            return photo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhotoID
        {
            get
            {
                return _PhotoID;
            }
            set
            {
                if (_PhotoID != value)
                {
                    OnPhotoIDChanging(value);
                    ReportPropertyChanging("PhotoID");
                    _PhotoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PhotoID");
                    OnPhotoIDChanged();
                }
            }
        }
        private global::System.Int32 _PhotoID;
        partial void OnPhotoIDChanging(global::System.Int32 value);
        partial void OnPhotoIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UploadTime
        {
            get
            {
                return _UploadTime;
            }
            set
            {
                OnUploadTimeChanging(value);
                ReportPropertyChanging("UploadTime");
                _UploadTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadTime");
                OnUploadTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UploadTime;
        partial void OnUploadTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUploadTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoName
        {
            get
            {
                return _PhotoName;
            }
            set
            {
                OnPhotoNameChanging(value);
                ReportPropertyChanging("PhotoName");
                _PhotoName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoName");
                OnPhotoNameChanged();
            }
        }
        private global::System.String _PhotoName;
        partial void OnPhotoNameChanging(global::System.String value);
        partial void OnPhotoNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PUserID
        {
            get
            {
                return _PUserID;
            }
            set
            {
                OnPUserIDChanging(value);
                ReportPropertyChanging("PUserID");
                _PUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PUserID");
                OnPUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PUserID;
        partial void OnPUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnPUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUri
        {
            get
            {
                return _ImageUri;
            }
            set
            {
                OnImageUriChanging(value);
                ReportPropertyChanging("ImageUri");
                _ImageUri = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUri");
                OnImageUriChanged();
            }
        }
        private global::System.String _ImageUri;
        partial void OnImageUriChanging(global::System.String value);
        partial void OnImageUriChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Photos_Messages", "Messages")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("ClassRoomModel.FK_Photos_Messages", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("ClassRoomModel.FK_Photos_Messages", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Users_Photos", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClassRoomModel.FK_Users_Photos", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClassRoomModel.FK_Users_Photos", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClassRoomModel.FK_Users_Photos", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ClassRoomModel.FK_Users_Photos", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassRoomModel", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Student 对象。
        /// </summary>
        /// <param name="studentID">StudentID 属性的初始值。</param>
        /// <param name="sClassID">SClassID 属性的初始值。</param>
        public static Student CreateStudent(global::System.Int32 studentID, global::System.Int32 sClassID)
        {
            Student student = new Student();
            student.StudentID = studentID;
            student.SClassID = sClassID;
            return student;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentID
        {
            get
            {
                return _StudentID;
            }
            set
            {
                if (_StudentID != value)
                {
                    OnStudentIDChanging(value);
                    ReportPropertyChanging("StudentID");
                    _StudentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StudentID");
                    OnStudentIDChanged();
                }
            }
        }
        private global::System.Int32 _StudentID;
        partial void OnStudentIDChanging(global::System.Int32 value);
        partial void OnStudentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SClassID
        {
            get
            {
                return _SClassID;
            }
            set
            {
                OnSClassIDChanging(value);
                ReportPropertyChanging("SClassID");
                _SClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SClassID");
                OnSClassIDChanged();
            }
        }
        private global::System.Int32 _SClassID;
        partial void OnSClassIDChanging(global::System.Int32 value);
        partial void OnSClassIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Grade
        {
            get
            {
                return _Grade;
            }
            set
            {
                OnGradeChanging(value);
                ReportPropertyChanging("Grade");
                _Grade = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Grade");
                OnGradeChanged();
            }
        }
        private Nullable<global::System.Int32> _Grade;
        partial void OnGradeChanging(Nullable<global::System.Int32> value);
        partial void OnGradeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Students_Classes", "Classes")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("ClassRoomModel.FK_Students_Classes", "Classes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("ClassRoomModel.FK_Students_Classes", "Classes").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("ClassRoomModel.FK_Students_Classes", "Classes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("ClassRoomModel.FK_Students_Classes", "Classes", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Users_Students", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("ClassRoomModel.FK_Users_Students", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("ClassRoomModel.FK_Users_Students", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassRoomModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 sysdiagram 对象。
        /// </summary>
        /// <param name="name">name 属性的初始值。</param>
        /// <param name="principal_id">principal_id 属性的初始值。</param>
        /// <param name="diagram_id">diagram_id 属性的初始值。</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassRoomModel", Name="Teacher")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Teacher : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Teacher 对象。
        /// </summary>
        /// <param name="teacherID">TeacherID 属性的初始值。</param>
        /// <param name="courseID">CourseID 属性的初始值。</param>
        public static Teacher CreateTeacher(global::System.Int32 teacherID, global::System.Int32 courseID)
        {
            Teacher teacher = new Teacher();
            teacher.TeacherID = teacherID;
            teacher.CourseID = courseID;
            return teacher;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeacherID
        {
            get
            {
                return _TeacherID;
            }
            set
            {
                if (_TeacherID != value)
                {
                    OnTeacherIDChanging(value);
                    ReportPropertyChanging("TeacherID");
                    _TeacherID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeacherID");
                    OnTeacherIDChanged();
                }
            }
        }
        private global::System.Int32 _TeacherID;
        partial void OnTeacherIDChanging(global::System.Int32 value);
        partial void OnTeacherIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Office
        {
            get
            {
                return _Office;
            }
            set
            {
                OnOfficeChanging(value);
                ReportPropertyChanging("Office");
                _Office = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Office");
                OnOfficeChanged();
            }
        }
        private global::System.String _Office;
        partial void OnOfficeChanging(global::System.String value);
        partial void OnOfficeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseID
        {
            get
            {
                return _CourseID;
            }
            set
            {
                OnCourseIDChanging(value);
                ReportPropertyChanging("CourseID");
                _CourseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseID");
                OnCourseIDChanged();
            }
        }
        private global::System.Int32 _CourseID;
        partial void OnCourseIDChanging(global::System.Int32 value);
        partial void OnCourseIDChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_ChineseT_Classes", "Classes")]
        public EntityCollection<Class> Classes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Class>("ClassRoomModel.FK_ChineseT_Classes", "Classes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Class>("ClassRoomModel.FK_ChineseT_Classes", "Classes", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Classes_Teachers", "Classes")]
        public EntityCollection<Class> Classes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Class>("ClassRoomModel.FK_Classes_Teachers", "Classes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Class>("ClassRoomModel.FK_Classes_Teachers", "Classes", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_MathT_Classes", "Classes")]
        public EntityCollection<Class> Classes2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Class>("ClassRoomModel.FK_MathT_Classes", "Classes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Class>("ClassRoomModel.FK_MathT_Classes", "Classes", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Teachers_Courses", "Course")]
        public Course Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("ClassRoomModel.FK_Teachers_Courses", "Course").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("ClassRoomModel.FK_Teachers_Courses", "Course").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Course> CourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("ClassRoomModel.FK_Teachers_Courses", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Course>("ClassRoomModel.FK_Teachers_Courses", "Course", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Users_Teachers", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("ClassRoomModel.FK_Users_Teachers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("ClassRoomModel.FK_Users_Teachers", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassRoomModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User 对象。
        /// </summary>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        /// <param name="userRoleID">UserRoleID 属性的初始值。</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String password, global::System.Int32 userRoleID)
        {
            User user = new User();
            user.UserID = userID;
            user.Password = password;
            user.UserRoleID = userRoleID;
            return user;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private Nullable<global::System.Boolean> _Sex;
        partial void OnSexChanging(Nullable<global::System.Boolean> value);
        partial void OnSexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Realname
        {
            get
            {
                return _Realname;
            }
            set
            {
                OnRealnameChanging(value);
                ReportPropertyChanging("Realname");
                _Realname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Realname");
                OnRealnameChanged();
            }
        }
        private global::System.String _Realname;
        partial void OnRealnameChanging(global::System.String value);
        partial void OnRealnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Introduction
        {
            get
            {
                return _Introduction;
            }
            set
            {
                OnIntroductionChanging(value);
                ReportPropertyChanging("Introduction");
                _Introduction = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Introduction");
                OnIntroductionChanged();
            }
        }
        private global::System.String _Introduction;
        partial void OnIntroductionChanging(global::System.String value);
        partial void OnIntroductionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QQ
        {
            get
            {
                return _QQ;
            }
            set
            {
                OnQQChanging(value);
                ReportPropertyChanging("QQ");
                _QQ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QQ");
                OnQQChanged();
            }
        }
        private global::System.String _QQ;
        partial void OnQQChanging(global::System.String value);
        partial void OnQQChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserRoleID
        {
            get
            {
                return _UserRoleID;
            }
            set
            {
                OnUserRoleIDChanging(value);
                ReportPropertyChanging("UserRoleID");
                _UserRoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserRoleID");
                OnUserRoleIDChanged();
            }
        }
        private global::System.Int32 _UserRoleID;
        partial void OnUserRoleIDChanging(global::System.Int32 value);
        partial void OnUserRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserRole
        {
            get
            {
                return _UserRole;
            }
            set
            {
                OnUserRoleChanging(value);
                ReportPropertyChanging("UserRole");
                _UserRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserRole");
                OnUserRoleChanged();
            }
        }
        private Nullable<global::System.Int32> _UserRole;
        partial void OnUserRoleChanging(Nullable<global::System.Int32> value);
        partial void OnUserRoleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUri
        {
            get
            {
                return _ImageUri;
            }
            set
            {
                OnImageUriChanging(value);
                ReportPropertyChanging("ImageUri");
                _ImageUri = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUri");
                OnImageUriChanged();
            }
        }
        private global::System.String _ImageUri;
        partial void OnImageUriChanging(global::System.String value);
        partial void OnImageUriChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Users_Artcles", "Articles")]
        public EntityCollection<Article> Articles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Article>("ClassRoomModel.FK_Users_Artcles", "Articles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Article>("ClassRoomModel.FK_Users_Artcles", "Articles", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Users_Messages", "Messages")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("ClassRoomModel.FK_Users_Messages", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("ClassRoomModel.FK_Users_Messages", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Users_Notes", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("ClassRoomModel.FK_Users_Notes", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("ClassRoomModel.FK_Users_Notes", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Users_Photos", "Photos")]
        public EntityCollection<Photo> Photos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Photo>("ClassRoomModel.FK_Users_Photos", "Photos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Photo>("ClassRoomModel.FK_Users_Photos", "Photos", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Users_Students", "Students")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("ClassRoomModel.FK_Users_Students", "Students").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("ClassRoomModel.FK_Users_Students", "Students").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("ClassRoomModel.FK_Users_Students", "Students");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("ClassRoomModel.FK_Users_Students", "Students", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassRoomModel", "FK_Users_Teachers", "Teachers")]
        public Teacher Teacher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("ClassRoomModel.FK_Users_Teachers", "Teachers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("ClassRoomModel.FK_Users_Teachers", "Teachers").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teacher> TeacherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("ClassRoomModel.FK_Users_Teachers", "Teachers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teacher>("ClassRoomModel.FK_Users_Teachers", "Teachers", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
