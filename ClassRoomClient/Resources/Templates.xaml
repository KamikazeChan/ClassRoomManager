<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ColorsAndBrushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Data Templates -->
    <DataTemplate x:Key="PictureDataTemplate">
        <Image Source="{Binding Path=Thumbnail}"
               Width="75"
               Height="75"
               Margin="4">
            <Image.ToolTip>
                <Grid>
                    <Image Source="{Binding Path=Uri}"
                           MaxWidth="400"
                           MaxHeight="400" />
                    <TextBlock VerticalAlignment="Bottom"
                               HorizontalAlignment="Center"
                               Foreground="{StaticResource textBrush}"
                               FontSize="16"
                               Text="{Binding Path=Name}">
                        <TextBlock.BitmapEffect>
                            <OuterGlowBitmapEffect GlowSize="2"
                                                   GlowColor="{StaticResource bgColor}" />
                        </TextBlock.BitmapEffect>
                    </TextBlock>
                </Grid>
            </Image.ToolTip>
            <Image.OpacityMask>
                <VisualBrush>
                    <VisualBrush.Visual>
                        <!--The color is not really important here-->
                        <Border CornerRadius="10"
                                Background="Pink"
                                Width="75"
                                Height="75" />
                    </VisualBrush.Visual>
                </VisualBrush>
            </Image.OpacityMask>
            <Image.Triggers>
                <EventTrigger RoutedEvent="Image.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="Width">
                            <DoubleAnimation By="25"
                                             Duration="0:0:0.25" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Image.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="Width">
                            <DoubleAnimation To="{TemplateBinding Width}"
                                             Duration="0:0:0.25" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Image.Triggers>
        </Image>
    </DataTemplate>

    <!-- Control Templates -->
    <ControlTemplate x:Key="ExpanderTemplate"
                     TargetType="{x:Type Expander}">
        <StackPanel x:Name="Layout">
            <StackPanel x:Name="HeaderLayout"
                        Orientation="Horizontal">
                <ToggleButton x:Name="Toggle"
                              Template="{DynamicResource ExpanderToggleButtonTemplate}"
                              IsChecked="{Binding Path=IsExpanded, 
                                                  Mode=TwoWay, 
                                                  RelativeSource={RelativeSource TemplatedParent}}" />
                <ContentPresenter Margin="4"
                                  RecognizesAccessKey="True"
                                  ContentSource="Header" />
            </StackPanel>
            <Border x:Name="ExpandableRegion"
                    Visibility="Collapsed">
                <ContentPresenter Focusable="false" />
            </Border>
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded"
                     Value="True">
                <Setter TargetName="ExpandableRegion"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="ExpandDirection"
                     Value="Right">
                <Setter TargetName="Layout"
                        Property="Orientation"
                        Value="Horizontal" />
                <Setter TargetName="Layout"
                        Property="Margin"
                        Value="8 0 0 0" />
                <Setter TargetName="HeaderLayout"
                        Property="Orientation"
                        Value="Vertical" />
                <Setter TargetName="Toggle"
                        Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ExpanderToggleButtonTemplate"
                     TargetType="{x:Type ToggleButton}">
        <Grid Width="24"
              Height="24"
              Margin="-8 0 0 0">
            <Grid.Resources>
                <ResourceDictionary>
                    <Style TargetType="{x:Type Path}">
                        <Setter Property="Stroke"
                                Value="{StaticResource controlOutline}" />
                        <Setter Property="StrokeThickness"
                                Value="0.3" />
                        <Setter Property="Fill"
                                Value="{StaticResource textBrush}" />
                        <Setter Property="HorizontalAlignment"
                                Value="Center" />
                        <Setter Property="VerticalAlignment"
                                Value="Center" />
                    </Style>
                </ResourceDictionary>
            </Grid.Resources>
            <Ellipse Stretch="Uniform"
                     Stroke="{StaticResource controlOutline}"
                     Fill="{StaticResource yellowGradient}" />
            <Ellipse Margin="3,2,3,8"
                     Fill="{StaticResource glossBrush}" />
            <Path x:Name="UpArrow"
                  Data="M 0 0 L 4 6 L 8 0 Z" />
            <Path x:Name="DownArrow"
                  Visibility="Collapsed"
                  Data="M 0 6 L 4 0 L 8 6 Z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter Property="Visibility"
                        Value="Visible"
                        TargetName="DownArrow" />
                <Setter Property="Visibility"
                        Value="Collapsed"
                        TargetName="UpArrow" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="FancyButtonTemplate"
                     TargetType="{x:Type ButtonBase}">
        <Grid HorizontalAlignment="Center"
              VerticalAlignment="Center">
            <Ellipse x:Name="chromeEdge"
                     Margin="-2"
                     Width="36"
                     Height="36"
                     Fill="{StaticResource chromeBrush}"
                     Stroke="{StaticResource chromeOutline}"
                     StrokeThickness="0.5"
                     RenderTransformOrigin="0.5,0.5">
                <Ellipse.RenderTransform>
                    <RotateTransform />
                </Ellipse.RenderTransform>
            </Ellipse>
            <Ellipse x:Name="bg"
                     Width="32"
                     Height="32"
                     Stroke="{StaticResource redBrush}"
                     Fill="{StaticResource redRadial}" />
            <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center" />
            <Rectangle x:Name="gloss"
                       Margin="3.5"
                       Width="25"
                       Height="16"
                       Stroke="{StaticResource bgBrush}"
                       StrokeThickness="0"
                       RadiusX="20"
                       RadiusY="10"
                       Fill="{StaticResource glossBrush}"
                       VerticalAlignment="Top" />
        </Grid>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                <BeginStoryboard>
                    <Storyboard Storyboard.TargetName="chromeEdge"
                                Storyboard.TargetProperty="RenderTransform.Angle">
                        <DoubleAnimation To="90"
                                         Duration="0:0:0.10" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                <BeginStoryboard>
                    <Storyboard Storyboard.TargetName="chromeEdge"
                                Storyboard.TargetProperty="RenderTransform.Angle">
                        <DoubleAnimation To="0"
                                         Duration="0:0:0.10" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter TargetName="chromeEdge"
                        Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <RotateTransform Angle="90" />
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="GroupItemTemplate"
                     TargetType="{x:Type GroupItem}">
        <Border Margin="10"
                CornerRadius="10"
                Background="{StaticResource semiTransparent}">
            <Expander IsExpanded="True">
                <Expander.Header>
                    <TextBlock Text="{Binding Path=Name}"
                               Style="{DynamicResource GroupHeaderStyle}" />
                </Expander.Header>
                <ItemsPresenter Margin="0 0 0 8" />
            </Expander>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxTemplate"
                     TargetType="{x:Type ListBox}">
        <Border Background="{StaticResource yellowBrush}"
                CornerRadius="3"
                Margin="4"
                Padding="4">
            <ScrollViewer Focusable="False"
                          Margin="0,4,0,0">
                <ItemsPresenter />
            </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsGrouping"
                     Value="true">
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxItemTemplate"
                     TargetType="{x:Type ListBoxItem}">
        <Border x:Name="background"
                Padding="4,2"
                CornerRadius="6">
            <ContentPresenter />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected"
                     Value="true">
                <Setter TargetName="background"
                        Property="Background"
                        Value="{StaticResource orangeBrush}" />
                <Setter TargetName="background"
                        Property="TextBlock.Foreground"
                        Value="{StaticResource textBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ListGroupItemTemplate"
                     TargetType="{x:Type GroupItem}">
        <Border Background="{StaticResource semiTransparent}"
                Margin="{TemplateBinding Margin}"
                CornerRadius="10">
            <Expander IsExpanded="True">
                <Expander.Header>
                    <TextBlock FontWeight="Bold"
                               FontSize="16"
                               Text="{Binding Path=Name}"
                               Foreground="{StaticResource textBrush}">
                        <TextBlock.BitmapEffect>
                            <OuterGlowBitmapEffect GlowColor="{StaticResource bgColor}"
                                                   GlowSize="2"
                                                   Opacity="0.5" />
                        </TextBlock.BitmapEffect>
                    </TextBlock>
                </Expander.Header>
                <ItemsPresenter Margin="0 0 0 8" />
            </Expander>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="MainMenuButtonTemplate"
                     TargetType="{x:Type ButtonBase}">
        <Grid HorizontalAlignment="Center"
              VerticalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*" />
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>
            <Grid x:Name="Icon"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center">
                <ContentPresenter />
            </Grid>
            <Rectangle Grid.Row="1"
                       Width="{Binding Path=ActualWidth, ElementName=Icon}"
                       MinHeight="24"
                       OpacityMask="{StaticResource reflectionMask}">
                <Rectangle.Fill>
                    <VisualBrush Visual="{Binding ElementName=Icon}"
                                 Stretch="Fill"
                                 TileMode="Tile">
                        <VisualBrush.Transform>
                            <TransformGroup>
                                <ScaleTransform ScaleY="-1" />
                            </TransformGroup>
                        </VisualBrush.Transform>
                    </VisualBrush>
                </Rectangle.Fill>
            </Rectangle>
            <TextBlock x:Name="Caption"
                       Visibility="Hidden"
                       Margin="12 -32 0 0"
                       Text="{TemplateBinding Tag}"
                       TextWrapping="Wrap"
                       Foreground="{DynamicResource textBrush}"
                       TextAlignment="Center"
                       FontSize="48">
			<TextBlock.BitmapEffect>
				<OuterGlowBitmapEffect GlowColor="{DynamicResource textColor}"
                                       GlowSize="5"
                                       Opacity="0.65" />
			</TextBlock.BitmapEffect>
		</TextBlock>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter TargetName="Caption"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="Icon"
                        Property="Opacity"
                        Value="0.9" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MediaButtonTemplate"
                     TargetType="{x:Type ButtonBase}">
        <Grid Width="32"
              Height="32"
              Background="Transparent">
            <ContentPresenter VerticalAlignment="Center"
                              HorizontalAlignment="Center" />
            <Border x:Name="highlight"
                    Visibility="Hidden"
                    CornerRadius="3"
                    Background="{StaticResource MediaButtonHover}"
                    BorderBrush="{StaticResource glossOutline}"
                    BorderThickness="1">
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter TargetName="highlight"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter TargetName="highlight"
                        Property="Opacity"
                        Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ScrollBarTemplate"
                     TargetType="{x:Type ScrollBar}">
        <Grid x:Name="GridRoot"
              Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
              Background="{x:Null}">
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>

            <RepeatButton x:Name="DecreaseRepeat"
                          Command="ScrollBar.LineUpCommand"
                          Template="{DynamicResource ScrollRepeatButtonTemplate}">
                <Grid>
                    <Path x:Name="DecreaseArrow"
                          Fill="{DynamicResource controlOutline}"
                          Data="M 0 6 L 4 0 L 8 6 Z" />
                </Grid>
            </RepeatButton>

            <Track x:Name="PART_Track"
                   Grid.Row="1"
                   Orientation="Vertical"
                   IsDirectionReversed="True">
                <Track.Thumb>
                    <Thumb Template="{DynamicResource ScrollBarThumbTemplate}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton x:Name="PageUp"
                                  Command="ScrollBar.PageDownCommand"
                                  Template="{DynamicResource TrackRepeatButtonTemplate}" />
                </Track.IncreaseRepeatButton>
                <Track.DecreaseRepeatButton>
                    <RepeatButton x:Name="PageDown"
                                  Command="ScrollBar.PageUpCommand"
                                  Template="{DynamicResource TrackRepeatButtonTemplate}" />
                </Track.DecreaseRepeatButton>
            </Track>

            <RepeatButton Grid.Row="2"
                          x:Name="IncreaseRepeat"
                          Command="ScrollBar.LineDownCommand"
                          Template="{DynamicResource ScrollRepeatButtonTemplate}">
                <Grid>
                    <Path x:Name="IncreaseArrow"
                          Fill="{DynamicResource controlOutline}"
                          Data="M 0 0 L 4 6 L 8 0 Z" />
                </Grid>
            </RepeatButton>
        </Grid>
        <ControlTemplate.Triggers>
            <!-- Sometimes the scroll needs to be horizontal, the layout needs to accomodate this-->
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="LayoutTransform"
                        TargetName="GridRoot">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="PART_Track"
                        Property="Orientation"
                        Value="Vertical" />
                <Setter TargetName="DecreaseRepeat"
                        Property="Command"
                        Value="ScrollBar.LineLeftCommand" />
                <Setter TargetName="IncreaseRepeat"
                        Property="Command"
                        Value="ScrollBar.LineRightCommand" />
                <Setter TargetName="PageDown"
                        Property="Command"
                        Value="ScrollBar.PageLeftCommand" />
                <Setter TargetName="PageUp"
                        Property="Command"
                        Value="ScrollBar.PageRightCommand" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ScrollBarThumbTemplate"
                     TargetType="{x:Type Thumb}">
        <Grid Background="Transparent"
              Margin="2">
            <Border Background="{StaticResource redRadial}"
                    BorderBrush="{StaticResource controlOutline}"
                    BorderThickness="0.5"
                    CornerRadius="6" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ScrollRepeatButtonTemplate"
                     TargetType="{x:Type RepeatButton}">
        <Grid>
            <Ellipse Fill="{StaticResource redRadial}"
                     Stroke="{StaticResource controlOutline}"
                     StrokeThickness="1"
                     Height="Auto" />
            <ContentPresenter VerticalAlignment="Center"
                              HorizontalAlignment="Center" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderTemplate"
                     TargetType="{x:Type Slider}">
        <Grid x:Name="root">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Border Grid.Row="1"
                    Height="4"
                    CornerRadius="2"
                    Background="{StaticResource sliderBg}">
            </Border>

            <!-- The Track lays out the repeat buttons and thumb -->
            <Track Grid.Row="1"
                   x:Name="PART_Track">
                <Track.Thumb>
                    <Thumb Template="{DynamicResource ThumbTemplate}" />
                </Track.Thumb>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter TargetName="root"
                        Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
                <!-- Track rotates itself based on orientation so need to force it back -->
                <Setter TargetName="PART_Track"
                        Property="Orientation"
                        Value="Horizontal" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ThumbTemplate"
                     TargetType="{x:Type Thumb}">
        <Grid Width="16"
              Height="16">
            <Ellipse Fill="{StaticResource redRadial}"
                     Stroke="{StaticResource controlOutline}" />
            <Ellipse Fill="{StaticResource glossBrush}"
                     Margin="2,2,2,4" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ToolTipTemplate"
                     TargetType="{x:Type ToolTip}">
        <Grid>
            <Border CornerRadius="4"
                    Background="Black"
                    Opacity="0.5" />
            <ContentPresenter Margin="10" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="TrackRepeatButtonTemplate"
                     TargetType="{x:Type RepeatButton}">
        <Grid Background="{StaticResource semiTransparent}"
              Margin="6,0,6,0" />
    </ControlTemplate>
</ResourceDictionary>